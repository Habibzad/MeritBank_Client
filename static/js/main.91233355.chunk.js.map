{"version":3,"sources":["AuthorizationContext.js","components/shared/Header.js","components/shared/Footer.js","components/landing_page/Landing.js","ResourceEndpoints.js","components/login/Login.js","components/admin_dashboard/AdminHome.js","components/cdofferings/CDOfferingList.js","components/cdofferings/AddCDOffering.js","components/accountholders/AccountHolders.js","components/users/UsersList.js","components/users/CreateUser.js","components/users/UpdateUser.js","components/accounts/UpdateAccount.js","components/cdofferings/DeleteCDOffering.js","components/accountholders/AddAccountHolder.js","components/accountholders/UpdateAccountHolder.js","components/transactions/TransactionsList.js","components/transactions/DepositTransaction.js","components/transactions/WithdrawTransaction.js","components/transactions/TransferTransaction.js","components/transactions/Transactions.js","components/accounts/SavingsAccount.js","components/accounts/CDAccount.js","components/accounts/PersonalChecking.js","components/accounts/DBAChecking.js","components/accounts/RegularIRA.js","components/accounts/Accounts.js","components/accounts/AddAccount.js","components/accountholders/Profile.js","components/shared/NoMatch.js","components/shared/Logout.js","components/admin_dashboard/AdminDash.js","components/user_dashboard/UserProfile.js","components/user_dashboard/UserCDOffering.js","components/user_dashboard/UserAccounts.js","components/user_dashboard/OpenPersonalChecking.js","components/user_dashboard/OpenSavingsAccount.js","components/user_dashboard/OpenCDAccount.js","components/user_dashboard/Accounts.js","components/user_dashboard/UserTransfer.js","components/user_dashboard/UserDash.js","App.js","index.js"],"names":["AuthorizationContext","createContext","AuthorizationProvider","props","useState","jwt","role","username","isLoggedIn","successMessage","errorMessage","store","setStore","useEffect","sessionStorage","getItem","JSON","parse","Provider","value","children","Header","useContext","user","loggedInUser","Navbar","bg","className","to","onClick","localStorage","clear","style","marginRight","Footer","href","Landing","Container","BASE_URL_ADD","BASE_URL_AUTHENTICATE","CD_OFFERINGS","Login","setLoggedIn","setUsername","password","setPassword","history","useHistory","setTimeout","e","a","preventDefault","axios","post","then","res","data","roles","decodedjwt","jwt_decode","sub","console","log","setItem","stringify","push","catch","err","message","width","marginTop","Alert","variant","class","color","Form","onSubmit","handleSubmit","fontSize","Group","controlId","Label","Control","required","onChange","target","name","autoComplete","type","placeholder","Button","active","AdminHome","currentDate","setCurrentDate","date","Date","today","getFullYear","getMonth","getDate","Fragment","Card","border","Body","src","height","alt","marginBottom","Title","Text","CDOfferingList","cdOfferings","setCDOfferings","showAOfferings","get","headers","error","Table","backgroundColor","textAlign","cursor","map","cdOffering","window","confirm","id","myHeaders","raw","fetch","method","body","redirect","response","text","result","deleteOffering","interestRate","term","AddCDOffering","setInterestRate","setTerm","num1","num2","payload","json","marginLeft","AccountHolders","showAccountHolders","accountHolders","setAccountHolders","accountHolder","requestOptions","deleteAccountHolder","firstName","lastName","UsersList","users","setUsers","displayUsers","counter","striped","bordered","hover","userName","deleteUser","CreateUser","enabled","useParams","setUserName","setActive","userRole","setUserRole","setAccountHolder","getAccountHolderInfo","createUser","as","Row","column","sm","Col","readOnly","span","offset","UpdateUser","updateUser","defaultValue","UpdateAccount","setName","DeleteCDOffering","setId","AddAccountHolder","setFirstName","middleName","setMiddleName","setLastName","dob","setDob","ssn","setSSN","phone","setPhone","email","setEmail","address","setAddress","createAccountHolder","margin","borderBottom","borderRadius","UpdateAccountHolder","updateAccountHolder","TransactionsList","transactions","setTransactions","showTransactions","position","top","transaction","transactionDate","description","amount","transactionType","sourceAccount","accountNumber","targetAccount","DepositTransaction","setTargetAccount","setDescription","setAmmount","setType","disabled","WithdrawTransaction","values","setValues","handleChange","TransferTransaction","setSourceAccount","submitTransfer","deposit","withdraw","transfer","AddAccount","url","useRouteMatch","Jumbotron","exact","path","SavingsAccount","balance","setBalance","setAccountNumber","CDAccount","cdOfferingID","setCDOfferingID","PersonalChecking","DBAChecking","RegularIRA","Accounts","accounts","setAccounts","displayAccounts","account","status","openingDate","accountType","closeAccount","addPersonalChecking","addDbaChecking","regularIRA","savings","Profile","CardDeck","padding","NoMatch","Logout","logout","addfferingslist","accountholders","usersList","trans","AdminDash","Collapse","FormControl","Transactions","UserProfile","setUser","displayContactInfo","combinedBalance","personalCheckingAccount","pca","savingsAccounts","dbaCheckingAccounts","UserAccounts","cdAccounts","cda","OpenPersonalChecking","openAccount","OpenSavingsAccount","OpenCDAccount","setCDOffering","personalChecking","cdAccount","UserTransfer","cd","openChecking","UserDash","UserCDOffering","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91233355.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\r\n\r\nexport const AuthorizationContext = createContext();\r\n\r\nexport const AuthorizationProvider = (props) => {\r\n\r\n    const [store, setStore] = useState({\r\n        jwt: '',\r\n        role: '',\r\n        username: '',\r\n        isLoggedIn: false,\r\n        successMessage: '',\r\n        errorMessage: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('isLoggedIn') !== null) {\r\n            const jwt = JSON.parse(sessionStorage.getItem('jwt'))\r\n            const role = JSON.parse(sessionStorage.getItem('role'))\r\n            const username = JSON.parse(sessionStorage.getItem('username'))\r\n            const isLoggedIn = JSON.parse(sessionStorage.getItem('isLoggedIn'))\r\n\r\n            setStore({\r\n                jwt: jwt,\r\n                role: role,\r\n                username: username,\r\n                isLoggedIn: isLoggedIn\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <AuthorizationContext.Provider value={[store, setStore]}>\r\n            {props.children}\r\n        </AuthorizationContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar } from 'react-bootstrap'\r\nimport '../../App.css';\r\n\r\nfunction Header() {\r\n    const [store, setStore] = useContext(AuthorizationContext);\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const user = store.username\r\n\r\n    const logout = () => {\r\n        setStore({\r\n            jwt: '',\r\n            role: '',\r\n            username: '',\r\n            isLoggedIn: false\r\n        })\r\n        localStorage.clear()\r\n    }\r\n\r\n    const loggedInUser = `${user}`\r\n    return (\r\n        <Navbar bg=\"\" className=\"header justify-content-end\">\r\n            {\r\n                isLoggedIn\r\n                    ?\r\n                    <Link className=\"login-btn\" to=\"/login\" onClick={logout}>Hello, {loggedInUser}! Logout</Link>\r\n                    :\r\n                    <Link className=\"login-btn\" to=\"/login\"><i className=\"fas fa-user\" style={{ marginRight: '7px' }}></i>Login</Link>\r\n            }\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"page-footer font-small text-light \">\r\n                <div className=\"footer-copyright text-center py-3\">© 2021 Copyright: <a className=\"footer-link\" href=\"https://twitter.com/Masoud_Habibzad/\">Merit Bank</a>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n","import React from \"react\";\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\nimport Header from \"../shared/Header\";\r\nimport Footer from \"../shared/Footer\";\r\nimport \"./landing.css\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Navbar className=\"navbar navbar-expand-lg shadow navbar-light bg-white\">\r\n        <Container>\r\n          {/* <img src=\"images/logo.png\" alt=\"logo\" /> */}\r\n          <a\r\n            className=\"nav-link-header waves-effect waves-light\"\r\n            href=\"https://www.meritamerica.org/\"\r\n          >\r\n            Merit Bank\r\n          </a>\r\n          <ul className=\"nav ml-auto nav-flex-icons\">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link-header waves-effect waves-light\"\r\n                href=\"https://www.meritamerica.org/\"\r\n              >\r\n                Checking\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link-header waves-effect waves-light\"\r\n                href=\"https://www.meritamerica.org/\"\r\n              >\r\n                Savings\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link-header waves-effect waves-light\"\r\n                href=\"https://www.meritamerica.org/\"\r\n              >\r\n                CD Accounts\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link-header waves-effect waves-light\"\r\n                href=\"https://www.meritamerica.org/\"\r\n              >\r\n                IRA Accounts\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </Container>\r\n      </Navbar>\r\n      <div className=\"mb-3 b12\">\r\n        <div className=\"b13\"></div>\r\n      </div>\r\n      <div className=\"container b14\">\r\n        <div className=\"d-flex flex-column text-white py-3 align-items-center\">\r\n          <h1 className=\"font-weight-bold text-center pb-3\">.</h1>\r\n          <h1 className=\"font-weight-bold text-center pb-3\">.</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row py-4\">\r\n          <div className=\"col-md-3 col-sm-6 pb-3 px-2 card-mobile\">\r\n            <div className=\"card card-body text-center shadow rounded-lg\">\r\n              <p>\r\n                <i className=\"landing-fa fab fa-cc-visa fa-3x\"></i>\r\n              </p>\r\n              <h4 className=\"landing-text\">Credit Cards</h4>\r\n              <p className=\"landing-text\">Lorem ipsum</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 col-sm-6 pb-3 px-2 card-mobile\">\r\n            <div className=\"card card-body text-center shadow rounded-lg\">\r\n              <p>\r\n                <i className=\"landing-fa fas fa-dollar-sign fa-3x\"></i>\r\n              </p>\r\n              <h4 className=\"landing-text\">Competative Interest Rates</h4>\r\n              <i className=\"\"></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 col-sm-6 pb-3 px-2 card-mobile\">\r\n            <div className=\"card card-body text-center shadow rounded-lg\">\r\n              <p>\r\n                <i className=\"landing-fa fas fa-tachometer-alt fa-3x\"></i>\r\n              </p>\r\n              <h4 className=\"landing-text\">Free Credit Score</h4>\r\n              <p className=\"landing-text\">Lorem ipsum</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 col-sm-6 pb-3 px-2 card-mobile\">\r\n            <div className=\"card card-body text-center shadow rounded-lg\">\r\n              <p>\r\n                <i className=\"landing-fa fas fa-mobile-alt fa-3x\"></i>\r\n              </p>\r\n              <h4 className=\"landing-text\">Mobile Banking</h4>\r\n              <p className=\"landing-text\">Lorem ipsum</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"text-center\">\r\n        <div className=\"jumbotron landing-jumbo\">\r\n          <h1 className=\"font-weight-bold text-center pb-3\">\r\n            Open The Account's You Need\r\n          </h1>\r\n\r\n          <h3 className=\"h5 text-center\">\r\n            Stay in control of <br />\r\n            your finances any time.\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export const BASE_URL_ADD = \"http://localhost:8080/api/authenticate\";\r\nexport const BASE_URL_AUTHENTICATE = \"http://localhost:8080/api/accountholders/\"\r\nexport const CD_OFFERINGS = \"http://localhost:8080/api/CDOfferings\"\r\nexport const CREATE_USER = \"http://localhost:8080/api/authenticate/createuser\"\r\nexport const DELETE_CDOFFERING = \"http://localhost:8080/api/CDOffering\"\r\nexport const CLEAR_CDOFFERINGS = \"http://localhost:8080/api/CDOfferings\"\r\nexport const USERS = \"http://localhost:8080/api/users\"\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport { BASE_URL_ADD } from '../../ResourceEndpoints'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport './login.css';\r\nfunction Login() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const [isLoggedIn, setLoggedIn] = useState(false)\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const errorMessage = store.errorMessage\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setLoggedIn(JSON.parse(localStorage.getItem('isLoggedIn')))\r\n    }, [isLoggedIn])\r\n\r\n    //Error message disappear after 2 seconds\r\n    if (errorMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, errorMessage: '' }), 3000)\r\n    }\r\n    //For page redirect\r\n\r\n    const user = {\r\n        username: username,\r\n        password: password\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        //Clear the form\r\n        setUsername('')\r\n        setPassword('')\r\n\r\n        //Call the authentication endpoint\r\n        axios.post(BASE_URL_ADD, user).then(res => {\r\n            const jwt = res.data.jwt\r\n            const role = res.data.roles\r\n            const isLoggedIn = true\r\n            const decodedjwt = jwt_decode(res.data.jwt);\r\n            const username = decodedjwt.sub;\r\n            console.log(decodedjwt)\r\n            console.log(res.data)\r\n            localStorage.setItem('jwt', JSON.stringify(jwt))\r\n            localStorage.setItem('role', JSON.stringify(role))\r\n            localStorage.setItem('isLoggedIn', JSON.stringify(isLoggedIn))\r\n            localStorage.setItem('username', JSON.stringify(username))\r\n\r\n            setStore({\r\n                jwt: jwt,\r\n                role: role,\r\n                username: username,\r\n                isLoggedIn: isLoggedIn\r\n            });\r\n\r\n            if (res.data != null) {\r\n                if (res.data.roles === \"[ROLE_ADMIN]\") {\r\n                    history.push(\"/admin\")\r\n                }\r\n                if (res.data.roles === \"[ROLE_USER]\") {\r\n                    history.push(\"/user\")\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            console.log('error message', err.message)\r\n            if (err.message !== null) {\r\n                setStore({\r\n                    ...store,\r\n                    errorMessage: 'Invalid login credentials, please try again'\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\" style={{ width: 400, marginTop: '10rem' }}>\r\n            {errorMessage &&\r\n                <Alert variant='warning'><i class=\"fas fa-ban\" style={{ color: 'red' }}></i> {errorMessage}</Alert>}\r\n            <Form onSubmit={e => handleSubmit(e)}>\r\n                <h2 className=\"text-center\" style={{ color: '#ec674c', fontSize: '28px' }}>Log In</h2>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>User Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        onChange={e => setUsername(e.target.value)}\r\n                        name=\"username\"\r\n                        autoComplete=\"off\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter email\"\r\n                        value={username} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\" className=\"mb-3\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        onChange={e =>\r\n                            setPassword(e.target.value)}\r\n                        autoComplete=\"off\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password} />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    variant=\"\"\r\n                    className=\"login-btn-dark\"\r\n                    type=\"submit\"\r\n                    style={{ width: 360, marginTop: '20px' }}>Login\r\n                </Button>\r\n                <Link className=\"login-component-link\" active to={\"/\"}>Back to Home</Link>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Card } from 'react-bootstrap'\r\nfunction AdminHome() {\r\n    const [store] = useContext(AuthorizationContext)\r\n    const user = store.username\r\n    const [currentDate, setCurrentDate] = useState('')\r\n\r\n    let date = new Date(),\r\n\r\n        today = date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();\r\n\r\n    useEffect(() => {\r\n        setCurrentDate(today)\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            <h3 className=\"component-header\"> <i class=\"fas fa-cog\"></i> Dashboard</h3>\r\n            <Card className=\"text-center\" style={{ marginTop: '5rem', border: 'none' }}>\r\n                <Card.Body>\r\n                    <i className=\"fas fa-university\" style={{ fontSize: '50px', color: '#ec674c' }}></i><br />\r\n                    <img src=\"/images/logo.png\" height=\"35\" alt=\"logo\" style={{ marginBottom: '3rem' }} />\r\n                    <Card.Title>Welcome to Admin Dashboard, {user}! </Card.Title>\r\n                    <Card.Text>Today is: <code>{currentDate}</code></Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminHome\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Table, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { CD_OFFERINGS, DELETE_CDOFFERING } from '../../ResourceEndpoints';\r\n\r\nfunction CDOfferingList() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    const [cdOfferings, setCDOfferings] = useState([])\r\n    const successMessage = store.successMessage;\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 2000)\r\n    }\r\n    useEffect(() => {\r\n        showAOfferings()\r\n    }, [])\r\n\r\n    async function showAOfferings() {\r\n        axios.get(CD_OFFERINGS, {\r\n            headers: {\r\n                'Authorization': `Bearer ` + jwt\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setCDOfferings(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(cdOfferings)\r\n            })\r\n    }\r\n\r\n    const deleteOffering = (id) => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const raw = JSON.stringify({\r\n            \"id\": id\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/CDOfferings\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                console.log(result)\r\n                showAOfferings()\r\n                setStore({ ...store, successMessage: \"CD Offerubg deleted Successfully!\" })\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {successMessage &&\r\n                <Alert variant='success'>{successMessage}</Alert>}\r\n            <h3 className=\"component-header\">CD Offerings</h3>\r\n            <div className=\"wrapper\">\r\n                <Table style={{ backgroundColor: 'white', textAlign: 'center' }} className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <i\r\n                                    className=\"fas fa-plus text-primary\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onClick={() => history.push('/admin/addcdofferomg')}>\r\n                                </i>\r\n                            </th>\r\n                            <th>ID</th>\r\n                            <th>Interest Rate</th>\r\n                            <th>Term</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {\r\n                            cdOfferings.map(cdOffering =>\r\n                                <tr key={cdOffering.id}>\r\n                                    <td>\r\n                                        <i className=\"far fa-trash-alt text-danger\" style={{ cursor: 'pointer' }}\r\n                                            onClick={() => {\r\n                                                if (window.confirm(`Are you sure you want to delete the offering?`)) {\r\n                                                    deleteOffering(cdOffering.id);\r\n                                                }\r\n                                            }}>\r\n                                        </i>\r\n                                    </td>\r\n                                    <td>{cdOffering.id}</td>\r\n                                    <td>{cdOffering.interestRate}</td>\r\n                                    <th>{cdOffering.term} Years</th>\r\n                                </tr>)\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CDOfferingList\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { CD_OFFERINGS } from '../../ResourceEndpoints';\r\n\r\nfunction AddCDOffering() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    const [interestRate, setInterestRate] = useState('');\r\n    const [term, setTerm] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        console.log(\"term\", term, 'interestrate: ', interestRate)\r\n        console.log('jwt: ', jwt)\r\n\r\n        const num1 = interestRate;\r\n        const num2 = term;\r\n\r\n        const myHeaders = {\r\n            \"Authorization\": `Bearer ${jwt}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"interestRate\": num1,\r\n            \"term\": num2\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(CD_OFFERINGS, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('result', result)\r\n                setStore({ ...store, successMessage: 'CD Offering added successfully!' })\r\n                history.push('/admin/addfferingslist')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        setInterestRate('')\r\n        setTerm('')\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"component-header\">Add CD Offering</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Interest Rate</Form.Label>\r\n                    <Form.Control value={interestRate} onChange={(e) => setInterestRate(e.target.value)} type=\"text\" placeholder=\"Interest Rate\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Term</Form.Label>\r\n                    <Form.Control value={term} onChange={(e) => setTerm(e.target.value)} type=\"text\" placeholder=\"Term\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                <Button variant=\"warning\" onClick={() => history.push('/admin/addfferingslist')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCDOffering\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect, useHistory, Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { BASE_URL_AUTHENTICATE } from '../../ResourceEndpoints';\r\n\r\nfunction AccountHolders() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    const successMessage = store.successMessage;\r\n\r\n    useEffect(() => {\r\n        showAccountHolders()\r\n    }, [])\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 2000)\r\n    }\r\n\r\n    const [accountHolders, setAccountHolders] = useState([])\r\n\r\n    async function showAccountHolders() {\r\n        axios.get(BASE_URL_AUTHENTICATE, {\r\n            headers: {\r\n                'Authorization': `Bearer ` + jwt\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setAccountHolders(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    const deleteAccountHolder = (id) => {\r\n\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        var requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            body: \"\",\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: 'Account deleted successfully!' });\r\n                showAccountHolders()\r\n\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {successMessage &&\r\n                <Alert className=\"alert\" variant='success'>{successMessage}</Alert>}\r\n            <h3 className=\"component-header\">Account Holders</h3>\r\n            <div className=\"wrapper\">\r\n                <table className=\"table table-striped table-bordered\" style={{ backgroundColor: 'white', textAlign: 'center' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th><i\r\n                                className=\"fas fa-plus text-primary\"\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => history.push('/admin/add-account-holder')}>\r\n                            </i></th>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Profile</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            accountHolders.map(accountHolder =>\r\n                                <tr key={accountHolder.id}>\r\n                                    <td>\r\n                                        <Link to={`update-account-holder/${accountHolder.id}`}><i className=\"fas fa-pencil-alt text-warning\" style={{ marginRight: '30px', cursor: 'pointer' }}></i></Link>\r\n                                        <i className=\"far fa-trash-alt text-danger\" style={{ cursor: 'pointer' }}\r\n                                            onClick={() => {\r\n                                                if (window.confirm(`Are you sure you want to delete `)) {\r\n                                                    deleteAccountHolder(accountHolder.id);\r\n                                                }\r\n                                            }}>\r\n                                        </i>\r\n                                    </td>\r\n                                    <td>{accountHolder.id}</td>\r\n                                    <td>{accountHolder.firstName} {accountHolder.lastName}</td>\r\n                                    <td className=\"profile\"><Link to={`profile/${accountHolder.id}`}>Profile</Link></td>\r\n                                </tr>)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountHolders","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { USERS } from '../../ResourceEndpoints';\r\nimport { Table, Alert } from 'react-bootstrap'\r\n\r\nfunction UsersList() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const successMessage = store.successMessage;\r\n    const [users, setUsers] = useState([])\r\n\r\n\r\n    //Display users when component is mountedF\r\n    useEffect(() => {\r\n        displayUsers();\r\n    }, [])\r\n\r\n\r\n    //Display users\r\n    const displayUsers = async () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders\r\n        };\r\n\r\n        fetch(USERS, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => setUsers(result))\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    //Delete User\r\n    async function deleteUser(id) {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/users/${id}`, requestOptions)\r\n            .then(response => {\r\n                displayUsers();\r\n                setStore({ ...store, successMessage: 'User deleted successfully!' })\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 2000)\r\n    }\r\n\r\n    let counter = 1;\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"component-header\">Users List</h3>\r\n            {successMessage &&\r\n                <Alert className=\"alert\" variant='success'>{successMessage}</Alert>}\r\n            <div className=\"wrapper\">\r\n                <Table striped bordered hover style={{ backgroundColor: 'white', textAlign: 'center' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th><i class=\"fas fa-hashtag\"></i></th>\r\n                            <th>\r\n                                Update/Delete\r\n                                {/* <Link to={`create-user/${6}`}><i className=\"fas fa-plus text-primary\" style={{ cursor: 'pointer' }}></i></Link> */}\r\n                            </th>\r\n                            <th>ID</th>\r\n                            <th>Username</th>\r\n                            <th>Password</th>\r\n                            <th>IsActive</th>\r\n                            <th>Role</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users.map(user =>\r\n                                <tr key={user.id}>\r\n                                    <td>{counter++}</td>\r\n                                    <td>\r\n                                        <Link to={`udate-user/${user.id}`}><i className=\"fas fa-pencil-alt text-warning\" style={{ marginRight: '30px', cursor: 'pointer' }}></i></Link>\r\n                                        <i className=\"fas fa-user-slash text-danger\" style={{ cursor: 'pointer' }}\r\n                                            onClick={() => {\r\n                                                if (window.confirm(`Are you sure you want to delete ${user.userName}`)) {\r\n                                                    deleteUser(user.id);\r\n                                                }\r\n                                            }}>\r\n                                        </i>\r\n                                    </td>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.password}</td>\r\n                                    <td>{user.active ? \"Yes\" : null}</td>\r\n                                    <td>{user.roles === \"ROLE_ADMIN\" ? \"Admin\" : user.roles === \"ROLE_USER\" ? \"User\" : null}</td>\r\n                                </tr>)\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row, Alert } from 'react-bootstrap'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction CreateUser() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    const [username, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [active, setActive] = useState('')\r\n    const [userRole, setUserRole] = useState('')\r\n    const [accountHolder, setAccountHolder] = useState({})\r\n    let enabled;\r\n    active === \"Enabled\" ? enabled = true : enabled = false\r\n\r\n    useEffect(() => {\r\n        getAccountHolderInfo()\r\n    }, [])\r\n\r\n    async function getAccountHolderInfo() {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setAccountHolder(result)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        createUser()\r\n        setUserName('')\r\n        setPassword('')\r\n    }\r\n\r\n    async function createUser() {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"userName\": username,\r\n            \"password\": password,\r\n            \"active\": enabled,\r\n            \"roles\": userRole\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${id}/set-user`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: \"User Created Successfully!\" })\r\n                setUserName('')\r\n                setPassword('')\r\n                setActive('')\r\n                setUserRole('')\r\n                history.push('/admin/users-list')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 className=\"component-header\">Create User</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Alert variant='info' style={{ textAlign: 'center' }}>Create User for {accountHolder.firstName} {accountHolder.lastName}</Alert>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>Account Holder ID</Form.Label>\r\n                    <Col sm={3}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"User ID\"\r\n                            value={id}\r\n                            readOnly\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>User Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"User Name\"\r\n                            value={username}\r\n                            onChange={e => setUserName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}> Password</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm={2}> Active</Form.Label>\r\n                    <select className=\"form-select\" onChange={e => setActive(e.target.value)}>\r\n                        <option >Select</option>\r\n                        <option >Enabled</option>\r\n                        <option >Disabled</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm={2}> Roles</Form.Label>\r\n                    <select className=\"form-select\" onChange={e => setUserRole(e.target.value)}>\r\n                        <option >Select</option>\r\n                        <option value=\"ROLE_USER\">User</option>\r\n                        <option value=\"ROLE_ADMIN\">Admin</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nfunction UpdateUser(props) {\r\n    let { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [store] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [userRole, setUserRole] = useState(\"ROLE_USER\")\r\n\r\n    //When component is mounted, prepopulate the form with data fetched from database\r\n    useEffect(() => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/users/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setUserName(result.userName)\r\n                setPassword(result.password)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        updateUser()\r\n    }\r\n\r\n    async function updateUser() {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        const payload = JSON.stringify({\r\n            \"id\": id,\r\n            \"userName\": userName,\r\n            \"password\": password,\r\n            \"active\": true,\r\n            \"roles\": userRole\r\n        });\r\n\r\n        console.log(JSON.parse(payload))\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: myHeaders,\r\n            body: payload\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/users/${id}`, requestOptions)\r\n            .then(response => {\r\n                console.log(response.json())\r\n                history.push('/admin/users-list')\r\n            })\r\n            .catch(error => {\r\n                console.log('error', error)\r\n            })\r\n    }\r\n\r\n    //Redirect to home page if the user is logged out or has user role\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"component-header\">Update User</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>User ID</Form.Label>\r\n                    <Col sm={3}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"User ID\"\r\n                            value={id}\r\n                            readOnly\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>User Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"User Name\"\r\n                            value={userName}\r\n                            onChange={e => setUserName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}> Password</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm={2}> Active</Form.Label>\r\n                    <select className=\"form-select\" >\r\n                        <option value>Enabled</option>\r\n                        <option >Disabled</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm={2}> Roles</Form.Label>\r\n                    <select className=\"form-select\" onChange={e => setUserRole(e.target.value)}>\r\n                        <option value=\"ROLE_USER\" defaultValue>User</option>\r\n                        <option value=\"ROLE_ADMIN\">Admin</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin/users-list')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateUser","import React, { useState, useEffect } from 'react'\r\n\r\nfunction UpdateAccount() {\r\n    const [name, setName] = useState('gg')\r\n\r\n    useEffect(() => {\r\n        setName('jj')\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Name: {name}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateAccount\r\n","import React, { useState, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Form, Row, Col, Button, Alert } from 'react-bootstrap'\r\nimport { DELETE_CDOFFERING } from '../../ResourceEndpoints';\r\nfunction DeleteCDOffering() {\r\n\r\n    const [store] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const [id, setId] = useState('')\r\n    const [successMessage, setSuccessMessage] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"id\": id\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(DELETE_CDOFFERING, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {successMessage &&\r\n                <Alert variant='success'>{successMessage}</Alert>}\r\n            <h3 className=\"component-header\">Delete CD Offering</h3>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Label>CD Offering ID</Form.Label>\r\n                <Row className=\"align-items-center\">\r\n                    <Col sm={2} className=\"my-1\">\r\n                        <Form.Control id=\"inlineFormInputName\" placeholder=\"Enter ID here...\" onChange={e => setId(e.target.value)} />\r\n                    </Col>\r\n\r\n                    <Col sm={2} className=\"my-1\">\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteCDOffering\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row, Alert } from 'react-bootstrap'\r\nimport { BASE_URL_AUTHENTICATE } from '../../ResourceEndpoints';\r\n\r\nfunction AddAccountHolder() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [middleName, setMiddleName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [ssn, setSSN] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [address, setAddress] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        createAccountHolder()\r\n        setFirstName('')\r\n        setMiddleName('')\r\n        setLastName('')\r\n        setSSN('')\r\n    }\r\n\r\n    async function createAccountHolder() {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        var raw = JSON.stringify({\r\n            \"firstName\": firstName,\r\n            \"middleName\": middleName,\r\n            \"lastName\": lastName,\r\n            \"dob\": dob,\r\n            \"ssn\": ssn,\r\n            \"phone\": phone,\r\n            \"email\": email,\r\n            \"address\": address\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/accountholders\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: \"AccountHolder Created Successfully!\" })\r\n                history.push('/admin/accountholders')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h2 className=\"component-header\">Create Account Holder</h2>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\" style={{ margin: '1rem 2rem', backgroundColor: '#fcfcfc', border: '1px solid #f4f4f4' }}>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}><i className=\"fas fa-user\"></i> First Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            required\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"text\"\r\n                            placeholder=\"First Name here...\"\r\n                            value={firstName}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}><i class=\"fas fa-user\"></i> Middle Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"text\"\r\n                            placeholder=\"Middle Name\"\r\n                            value={middleName}\r\n                            onChange={e => setMiddleName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}> <i class=\"fas fa-user\"></i> Last Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            value={lastName}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}><i class=\"fas fa-calendar-alt\"></i> Date of Birth</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"date\"\r\n                            placeholder=\"Date of birth\"\r\n                            value={dob}\r\n                            onChange={e => setDob(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}><i class=\"fas fa-address-card\"></i> SSN</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"text\"\r\n                            placeholder=\"Social Security Number\"\r\n                            value={ssn}\r\n                            onChange={e => setSSN(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}><i class=\"fas fa-phone-square\"></i> Phone</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"text\"\r\n                            placeholder=\"Phone Number\"\r\n                            value={phone}\r\n                            onChange={e => setPhone(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}><i class=\"fas fa-envelope\"></i> Email</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}><i class=\"fas fa-map-marker-alt\"></i> Address</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            style={{ border: 'none', borderBottom: '1px solid grey', borderRadius: '0' }}\r\n                            type=\"text\"\r\n                            placeholder=\"Home Address\"\r\n                            value={address}\r\n                            onChange={e => setAddress(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin/accountholders')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAccountHolder\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect, useHistory, useParams } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nfunction UpdateAccountHolder() {\r\n    let { id } = useParams();\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [middleName, setMiddleName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [ssn, setSSN] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [address, setAddress] = useState('')\r\n\r\n    useEffect(() => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setFirstName(result.firstName)\r\n                setMiddleName(result.middleName)\r\n                setLastName(result.lastName)\r\n                setDob(result.dob)\r\n                setSSN(result.ssn)\r\n                setPhone(result.phone)\r\n                setEmail(result.email)\r\n                setAddress(result.address)\r\n                console.log(result)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        updateAccountHolder()\r\n        setFirstName('')\r\n        setMiddleName('')\r\n        setLastName('')\r\n        setSSN('')\r\n    }\r\n\r\n    async function updateAccountHolder() {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"firstName\": firstName,\r\n            \"middleName\": middleName,\r\n            \"lastName\": lastName,\r\n            \"dob\": dob,\r\n            \"ssn\": ssn,\r\n            \"phone\": phone,\r\n            \"email\": email,\r\n            \"address\": address\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'PUT',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: 'Account Holder updated successfully!' });\r\n                history.push('/admin/accountholders')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"component-header\">Update Account Holder</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>Id</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            value={id}\r\n                            readOnly\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>First Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            value={firstName}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Middle Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Middle Name\"\r\n                            value={middleName}\r\n                            onChange={e => setMiddleName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Last Name</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            value={lastName}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-2\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}><i class=\"fas fa-calendar-alt\"></i> Date of Birth</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"date\"\r\n                            placeholder=\"Date of birth\"\r\n                            value={dob}\r\n                            onChange={e => setDob(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>SSN</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Social Security Number\"\r\n                            value={ssn}\r\n                            onChange={e => setSSN(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Phone</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Phone Number\"\r\n                            value={phone}\r\n                            onChange={e => setPhone(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Email</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Address</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Home Address\"\r\n                            value={address}\r\n                            onChange={e => setAddress(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin/accountholders')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateAccountHolder\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction TransactionsList() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const successMessage = store.successMessage;\r\n\r\n    useEffect(() => {\r\n        showTransactions();\r\n    }, [])\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 2000)\r\n    }\r\n    const showTransactions = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/transactions\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setTransactions(result)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    let counter = 1\r\n    return (\r\n        <div className=\"container\">\r\n            {successMessage &&\r\n                <Alert style={{ position: 'fixed', top: '0' }} variant='success'>{successMessage}</Alert>}\r\n            <h3 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i>  Transactions</h3>\r\n            <div >\r\n                <table style={{ backgroundColor: 'white', textAlign: 'center' }} className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><i class=\"fas fa-hashtag fa-col\"></i></th>\r\n                            <th>No</th>\r\n                            <th>Date</th>\r\n                            <th>Description</th>\r\n                            <th>Amount</th>\r\n                            <th>Type</th>\r\n                            <th>Source Account</th>\r\n                            <th>Target Account</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {\r\n                            transactions.map(transaction =>\r\n                                <tr key={transaction.id}>\r\n                                    <td>{counter++}</td>\r\n                                    <td>{transaction.id}</td>\r\n                                    <td>{transaction.transactionDate}</td>\r\n                                    <td>{transaction.description}</td>\r\n                                    <td>{transaction.amount}</td>\r\n                                    <td>{transaction.transactionType}</td>\r\n                                    <td>{transaction.sourceAccount !== null ? transaction.sourceAccount.accountNumber : ''}</td>\r\n                                    <td>{transaction.targetAccount !== null ? transaction.targetAccount.accountNumber : ''}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionsList\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nfunction DepositTransaction() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    const [targetAccount, setTargetAccount] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [amount, setAmmount] = useState('')\r\n    const [type, setType] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"targetAccountNum\": targetAccount,\r\n            \"description\": description,\r\n            \"amount\": amount,\r\n            \"transactionType\": type\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/deposit\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: \"Deposit transaction successfull!\" })\r\n                history.push('/admin/transactions')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Deposit</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Target Account</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Target Account\"\r\n                            value={targetAccount}\r\n                            onChange={e => setTargetAccount(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Description</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Description\"\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Amount</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={amount}\r\n                            onChange={e => setAmmount(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm={2}>Transaction Type</Form.Label>\r\n                    <select className=\"form-select\" onChange={e => setType(e.target.value)}>\r\n                        <option disabled>Select</option>\r\n                        <option >Cash</option>\r\n                        <option >Check</option>\r\n                        <option >ATM</option>\r\n                        <option >Admin</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepositTransaction\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row, Alert } from 'react-bootstrap'\r\n\r\nfunction WithdrawTransaction() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const successMessage = store.successMessage;\r\n    const history = useHistory();\r\n\r\n    const [values, setValues] = useState({\r\n        targetAccount: '',\r\n        description: '',\r\n        amount: '',\r\n        type: ''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 2000)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"targetAccountNum\": values.targetAccount,\r\n            \"description\": values.description,\r\n            \"amount\": values.amount,\r\n            \"transactionType\": values.type\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        console.log(JSON.parse(payload))\r\n        fetch(\"http://localhost:8080/api/withdraw\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: 'Transaction Successfull!' })\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Withdraw</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Target Account</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            name=\"targetAccount\"\r\n                            placeholder=\"Target Account\"\r\n                            value={values.targetAccount}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Description</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            placeholder=\"Description\"\r\n                            value={values.description}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Amount</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            placeholder=\"Amount\"\r\n                            value={values.amount}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm={2}>Transaction Type</Form.Label>\r\n                    <select\r\n                        name=\"type\"\r\n                        className=\"form-select\"\r\n                        onChange={handleChange}>\r\n                        <option >Select</option>\r\n                        <option >Cash</option>\r\n                        <option >Check</option>\r\n                        <option >ATM</option>\r\n                        <option >Transfer</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WithdrawTransaction\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\n\r\nfunction TransferTransaction() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt;\r\n    const history = useHistory();\r\n    const [sourceAccount, setSourceAccount] = useState('')\r\n    const [targetAccount, setTargetAccount] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [amount, setAmmount] = useState('')\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        submitTransfer();\r\n    }\r\n\r\n    const submitTransfer = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"sourceAccountNum\": sourceAccount,\r\n            \"targetAccountNum\": targetAccount,\r\n            \"description\": description,\r\n            \"amount\": amount\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/transfer\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                setStore({ ...store, successMessage: \"Transfer transaction successfull!\" })\r\n                history.push('/admin/transactions')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Transfer</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>Source Account</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Source Account\"\r\n                            value={sourceAccount}\r\n                            onChange={e => setSourceAccount(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Target Account</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Target Account\"\r\n                            value={targetAccount}\r\n                            onChange={e => setTargetAccount(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Description</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Description\"\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Amount</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={amount}\r\n                            onChange={e => setAmmount(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransferTransaction\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { Jumbotron } from 'react-bootstrap'\r\n\r\nimport TransactionsList from './TransactionsList';\r\nimport DepositTransaction from './DepositTransaction';\r\nimport WithdrawTransaction from './WithdrawTransaction';\r\nimport TransferTransaction from './TransferTransaction';\r\n\r\nconst deposit = '/deposit'\r\nconst withdraw = '/withdraw'\r\nconst transfer = '/transfer'\r\n\r\nfunction AddAccount() {\r\n    const { url } = useRouteMatch();\r\n    return (\r\n        <React.Fragment className=\"container\">\r\n            <Router>\r\n                <Jumbotron className=\"menu1\">\r\n                    <h5 className=\"component-header\">Transactions</h5>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 add-account-dash\">\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url}>Transactions List <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + deposit}>Deposit <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + withdraw}>Withdraw <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + transfer}>Transfer <i class=\"fas fa-chevron-right\"></i></Link>\r\n\r\n                        </div>\r\n                        <div className=\" add-account-container\">\r\n                            <Switch>\r\n                                <Route exact path={url}>\r\n                                    <TransactionsList />\r\n                                </Route>\r\n                                <Route exact path={url + deposit}>\r\n                                    <DepositTransaction />\r\n                                </Route>\r\n                                <Route exact path={url + withdraw}>\r\n                                    <WithdrawTransaction />\r\n                                </Route>\r\n                                <Route exact path={url + transfer}>\r\n                                    <TransferTransaction />\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddAccount\r\n\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\n\r\nfunction SavingsAccount() {\r\n    const [balance, setBalance] = useState('')\r\n    const [accountNumber, setAccountNumber] = useState('')\r\n\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"balance\": balance\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${accountNumber}/savingsAccounts`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setStore({ ...store, successMessage: \"Account Created Successfully!\" })\r\n                history.push('/admin/accounts')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <div >\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Add Savings Account</h4>\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>Account Holder ID</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Account Holder ID\"\r\n                                value={accountNumber}\r\n                                onChange={e => setAccountNumber(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}> Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value={balance}\r\n                                onChange={e => setBalance(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                            <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavingsAccount\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\n\r\nfunction CDAccount() {\r\n    const [balance, setBalance] = useState('')\r\n    const [accountNumber, setAccountNumber] = useState('')\r\n    const [cdOfferingID, setCDOfferingID] = useState('')\r\n\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"balance\": balance,\r\n            \"cdOffering\": {\r\n                \"id\": cdOfferingID\r\n            }\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${accountNumber}/cdAccounts`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setStore({ ...store, successMessage: \"Account Created Successfully!\" })\r\n                history.push('/admin/accounts')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Add Certificate of Deposit Account</h4>\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>Account Holders ID</Form.Label>\r\n                        <Col sm={4}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Account Holders ID\"\r\n                                value={accountNumber}\r\n                                onChange={e => setAccountNumber(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}> Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value={balance}\r\n                                onChange={e => setBalance(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}>CD Offering ID</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"CD Offering ID\"\r\n                                value={cdOfferingID}\r\n                                onChange={e => setCDOfferingID(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                            <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CDAccount\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\n\r\nfunction PersonalChecking() {\r\n    const [balance, setBalance] = useState('')\r\n    const [accountNumber, setAccountNumber] = useState('')\r\n\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"balance\": balance\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${accountNumber}/personalchecking`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setStore({ ...store, successMessage: \"Account Created Successfully!\" })\r\n                history.push('/admin/accounts')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Personal Account</h4>\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>Account Holder ID</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Account Holder ID\"\r\n                                value={accountNumber}\r\n                                onChange={e => setAccountNumber(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}> Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value={balance}\r\n                                onChange={e => setBalance(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Create Account</Button>\r\n                            <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalChecking\r\n\r\n","import React from 'react'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction DBAChecking() {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> DBA Checking</h4>\r\n            <div className=\"form-container\">\r\n                <Form >\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>Account Holder ID</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Account Holder ID\"\r\n                                value=''\r\n                                onChange={e => console.log('test')}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}> Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value=''\r\n                                onChange={e => console.log('test')}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                            <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DBAChecking\r\n","import React from 'react'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction RegularIRA() {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Regular IRA</h4>\r\n            <div className=\"form-container\">\r\n                <Form >\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>Account Holder ID</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Account Holder ID\"\r\n                                value=''\r\n                                onChange={e => console.log('test')}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}> Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value=''\r\n                                onChange={e => console.log('test')}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                            <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RegularIRA\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Table, Alert } from 'react-bootstrap'\r\n\r\nfunction Accounts() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    const successMessage = store.successMessage;\r\n    const errorMessage = store.errorMessage;\r\n\r\n    useEffect(() => {\r\n        displayAccounts();\r\n    }, [])\r\n\r\n    const displayAccounts = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/all-accounts\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setAccounts(result)\r\n                console.log('accounts results', result)\r\n            })\r\n            .catch(error => {\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    const closeAccount = (id) => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        var requestOptions = {\r\n            method: 'PUT',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/close-account/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('close account', result)\r\n                displayAccounts();\r\n                setStore({ ...store, successMessage: 'Account closed successfully!' })\r\n                setStore({ ...store, errorMessage: result.message })\r\n            })\r\n            .catch(error => {\r\n                console.log('error close account', error)\r\n            });\r\n    }\r\n\r\n    const deleteAccount = (id) => {\r\n        setStore({ ...store, errorMessage: 'Account cannot be deleted!' })\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/user\" />\r\n    }\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 3000)\r\n    }\r\n\r\n    if (errorMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, errorMessage: '' }), 3000)\r\n    }\r\n\r\n    let counter = 0;\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <h3 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Accounts</h3>\r\n            <div className=\"\">\r\n                {successMessage &&\r\n                    <Alert className=\"alert\" variant='success'>{successMessage}</Alert>}\r\n                {errorMessage &&\r\n                    <Alert variant='danger'>{errorMessage}</Alert>}\r\n                <Table style={{ backgroundColor: 'white', textAlign: 'center' }} className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><i class=\"fas fa-hashtag fa-col\"></i></th>\r\n                            <th>Account <i class=\"fas fa-hashtag\"></i></th>\r\n                            <th>Balance</th>\r\n                            <th>Interest Rate</th>\r\n                            <th>Opening Date</th>\r\n                            <th>Account Type</th>\r\n                            <th>Close Account</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {\r\n                            accounts.map(account =>\r\n                                account.status === \"OPEN\" ?\r\n                                    <tr key={account.accountNumber}>\r\n                                        <td>{++counter}</td>\r\n                                        <td>{account.accountNumber}</td>\r\n                                        <td>${account.balance}</td>\r\n                                        <td>{account.interestRate}%</td>\r\n                                        <td>{account.openingDate}</td>\r\n                                        <td>{account.accountType}</td>\r\n                                        <td style={{ color: 'blue', cursor: 'pointer' }} onClick={() => {\r\n                                            if (window.confirm(`Are you sure you want to close account number: ${account.accountNumber}`)) {\r\n                                                closeAccount(account.accountNumber);\r\n                                            }\r\n                                        }}>Close Account</td>\r\n                                        <td>\r\n                                            <i className=\"fas fa-user-slash text-danger\" style={{ cursor: 'pointer' }}\r\n                                                onClick={() => {\r\n                                                    if (window.confirm(`Are you sure you want to delete account: ${account.accountNumber}`)) {\r\n                                                        deleteAccount(account.accountNumber);\r\n                                                    }\r\n                                                }}>\r\n                                            </i>\r\n                                        </td>\r\n                                    </tr> : null)\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accounts\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { Jumbotron } from 'react-bootstrap'\r\n\r\nimport SavingsAccount from './SavingsAccount';\r\nimport CDAccount from './CDAccount'\r\nimport PersonalChecking from './PersonalChecking';\r\nimport DBAChecking from './DBAChecking'\r\nimport RegularIRA from './RegularIRA';\r\nimport Accounts from './Accounts'\r\nconst addPersonalChecking = '/personal-checking'\r\nconst addDbaChecking = '/dba-checking'\r\nconst addCD = '/cd'\r\nconst regularIRA = '/regular-ira'\r\nconst savings = '/savings'\r\n\r\nfunction AddAccount() {\r\n    const { url } = useRouteMatch();\r\n    return (\r\n        <React.Fragment>\r\n            <Router>\r\n                <Jumbotron className=\"menu1\">\r\n                    <h5 className=\"component-header\">Accounts</h5>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 add-account-dash\">\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url}>Accounts List <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + savings}><i className=\"fas fa-plus fa-col\"></i> Savings <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + addPersonalChecking}><i className=\"fas fa-plus fa-col\"></i> Personal Checking<i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + addDbaChecking}><i className=\"fas fa-plus fa-col\"></i> DBA Checking <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + addCD}><i className=\"fas fa-plus fa-col\"></i> CD Account <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + regularIRA}><i className=\"fas fa-plus fa-col\"></i> Regular IRA <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + regularIRA}><i className=\"fas fa-plus fa-col\"></i> Rollover IRA <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + regularIRA}><i className=\"fas fa-plus fa-col\"></i> Roth IRA <i class=\"fas fa-chevron-right\"></i></Link>\r\n                        </div>\r\n                        <div className=\" add-account-container\">\r\n                            <Switch>\r\n                                <Route exact path={url}>\r\n                                    <Accounts />\r\n                                </Route>\r\n                                <Route exact path={url + savings}>\r\n                                    <SavingsAccount />\r\n                                </Route>\r\n                                <Route exact path={url + addPersonalChecking}>\r\n                                    <PersonalChecking />\r\n                                </Route>\r\n                                <Route exact path={url + addDbaChecking}>\r\n                                    <DBAChecking />\r\n                                </Route>\r\n                                <Route exact path={url + addCD}>\r\n                                    <CDAccount />\r\n                                </Route>\r\n                                <Route exact path={url + regularIRA}>\r\n                                    <RegularIRA />\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddAccount\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom'\r\nimport { Card, CardDeck, Button } from 'react-bootstrap'\r\n\r\nfunction Profile() {\r\n    let { id } = useParams();\r\n    const [store] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    const [accountHolder, setAccountHolder] = useState({})\r\n\r\n    useEffect(() => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:8080/api/accountholders/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setAccountHolder(result)\r\n                console.log('profile mounted: ', result)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3 className=\"component-header\">{accountHolder.firstName} {accountHolder.lastName}'s Profile</h3>\r\n            <div className=\"wrapper\">\r\n                <CardDeck>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title style={{ padding: '10px 0', borderBottom: '3px solid grey' }}>{accountHolder.firstName}'s' Contact</Card.Title>\r\n                            <Card.Text>Phone: <b>{accountHolder.phone}</b></Card.Text>\r\n                            <Card.Text>Email: <b>{accountHolder.email}</b></Card.Text>\r\n                            <Card.Text>Address: <b>{accountHolder.address}</b></Card.Text>\r\n                            <Card.Text>Date of birth: <b>{accountHolder.dob}</b></Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    {/* <Card>\r\n                        <Card.Body>\r\n                            <Card.Title style={{ padding: '10px 0', borderBottom: '3px solid grey' }}>Accounts</Card.Title>\r\n                            <Card.Text>Savings balance:<br /><code>$ {accountHolder.savingsAccounts == null ? 0 : accountHolder.savingsAccounts[0].balance}</code></Card.Text>\r\n                            <Card.Text>Personal Checking balance: <br /><code>$1000</code></Card.Text>\r\n                            <Card.Text>Certificate of Deposit balance: <br /><code>$1000</code></Card.Text>\r\n                        </Card.Body>\r\n                    </Card> */}\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title style={{ padding: '10px 0', borderBottom: '3px solid grey' }}>User Info</Card.Title>\r\n                            {accountHolder.user == null ?\r\n                                <div>\r\n                                    <Card.Text>{accountHolder.firstName} does not have a user yet</Card.Text>\r\n                                    <Button variant=\"info\" onClick={() => { history.push(`/admin/create-user/${accountHolder.id}`) }}>Create User</Button>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <Card.Text>User Name: <br /><code>{accountHolder.user.userName}</code></Card.Text>\r\n                                    <Card.Text>User Name: <br /><code>******</code></Card.Text>\r\n                                    <Button variant=\"warning\" onClick={() => { history.push(`/admin/udate-user/${accountHolder.user.id}`) }}>Update User Credentials</Button>\r\n                                </div>}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n                <p onClick={() => history.push('/admin/accountholders')} style={{ color: 'blue', cursor: 'pointer', marginTop: '40px' }} ><i class=\"fas fa-chevron-left\"></i> Go Back</p>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <div className=\"page-wrap d-flex flex-row align-items-center\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <span className=\"display-1 d-block\">404</span>\r\n                        <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\r\n                        <Link className=\"\" active to={\"/\"}>Back to Home</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch\r\n","import { useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\n\r\nfunction Logout() {\r\n    const [, setStore] = useContext(AuthorizationContext)\r\n\r\n    const logout = () => {\r\n        setStore({\r\n            jwt: '',\r\n            role: '',\r\n            username: '',\r\n            isLoggedIn: false\r\n        })\r\n        sessionStorage.clear()\r\n    }\r\n\r\n    return { logout }\r\n}\r\n\r\nexport default Logout\r\n","import React, { useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Form, FormControl, Button, Jumbotron, Navbar } from 'react-bootstrap'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\n//Components\r\nimport AdminHome from './AdminHome'\r\nimport CDOfferings from '../cdofferings/CDOfferingList'\r\nimport AddCDOffering from '../cdofferings/AddCDOffering'\r\nimport AccountHolders from '../accountholders/AccountHolders'\r\nimport UsersList from '../users/UsersList'\r\nimport CreateUser from '../users/CreateUser'\r\nimport UpdateUser from '../users/UpdateUser';\r\nimport UpdateAccount from '../accounts/UpdateAccount'\r\nimport DeleteCDOffering from '../cdofferings/DeleteCDOffering'\r\nimport AddAccountHolder from '../accountholders/AddAccountHolder';\r\nimport UpdateAccountHolder from '../accountholders/UpdateAccountHolder';\r\nimport TransactionsList from '../transactions/TransactionsList';\r\nimport Transactions from '../transactions/Transactions'\r\nimport TransferTransaction from '../transactions/TransferTransaction';\r\nimport DepositTransaction from '../transactions/DepositTransaction';\r\nimport WithdrawTransaction from '../transactions/WithdrawTransaction';\r\nimport AddAccount from '../accounts/AddAccount';\r\nimport Profile from '../accountholders/Profile';\r\nimport NoMatch from '../shared/NoMatch';\r\nimport './admin.css'\r\n\r\nimport Logout from '../shared/Logout';\r\n//Component URLs\r\nconst addAccountHolder = '/add-account-holder'\r\nconst addfferingslist = '/addfferingslist'\r\nconst accountholders = '/accountholders'\r\nconst accounts = '/accounts'\r\nconst addcdofferings = '/addcdofferomg'\r\nconst createUser = '/create-user'\r\nconst deleteCDOffering = '/delete-cdoffering'\r\nconst deposit = '/deposit'\r\nconst transactions = '/transactions'\r\nconst transfer = '/transfer'\r\nconst updateAccount = '/update-account'\r\nconst usersList = '/users-list'\r\nconst withdraw = '/withdraw'\r\nconst profile = '/profile/:id'\r\nconst trans = '/trans'\r\n\r\nfunction AdminDash() {\r\n    const [store] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const { url } = useRouteMatch();\r\n    const { logout } = Logout();\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container dash\">\r\n            <Router>\r\n                <Navbar bg=\"\" variant=\"\" className=\"admin-top-header\">\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        {\r\n                            isLoggedIn\r\n                                ?\r\n                                <code onClick={logout} className=\"logout-btn\">\r\n                                    Logout\r\n                                </code>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Navbar bg=\"\" variant=\"\" className=\"admin-header\">\r\n                    <img src=\"/images/logo.jpeg\" height=\"35\" alt=\"logo\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"mr-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button variant=\"warning\"><i className=\"fas fa-search\"></i></Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Navbar bg=\"\" variant=\"\" className=\"menu\">\r\n                    <Link className=\"dash-menu\" active to={url}><i className=\"fas fa-home\"></i> Home</Link>\r\n                    <Link className=\"dash-menu\" to={url + accountholders} style={{ padding: '5px 5px 0', width: '220px' }}><i class=\"fas fa-users\"></i> AccountHolders</Link>\r\n                    <Link className=\"dash-menu\" to={url + accounts}><i className=\"fas fa-university\"></i> Accounts</Link>\r\n                    <Link className=\"dash-menu\" to={url + trans}><i class=\"fas fa-money-bill-alt\"></i> Transactions</Link>\r\n                    <Link className=\"dash-menu\" to={url + usersList}><i className=\"fas fa-user\"></i> Users</Link>\r\n                    <Link className=\"dash-menu\" to={url + addfferingslist}>CDOfferings</Link>\r\n\r\n                </Navbar>\r\n                <Jumbotron className=\"menu1\">\r\n                    <Switch>\r\n                        <Route exact path={url}>\r\n                            <AdminHome />\r\n                        </Route>\r\n                        <Route exact path={url + usersList}>\r\n                            <UsersList />\r\n                        </Route>\r\n                        <Route exact path={url + createUser + `/:id`}>\r\n                            <CreateUser />\r\n                        </Route>\r\n                        <Route exact path={url + '/udate-user/:id'}>\r\n                            <UpdateUser />\r\n                        </Route>\r\n                        <Route exact path={url + accounts}>\r\n                            <AddAccount />\r\n                        </Route>\r\n                        <Route exact path={url + updateAccount}>\r\n                            <UpdateAccount />\r\n                        </Route>\r\n                        <Route exact path={url + accountholders}>\r\n                            <AccountHolders />\r\n                        </Route>\r\n                        <Route path={url + addAccountHolder}>\r\n                            <AddAccountHolder />\r\n                        </Route>\r\n                        <Route path={url + \"/update-account-holder/:id\"}>\r\n                            <UpdateAccountHolder />\r\n                        </Route>\r\n                        <Route path={url + profile}>\r\n                            <Profile />\r\n                        </Route>\r\n                        <Route path={url + addfferingslist}>\r\n                            <CDOfferings />\r\n                        </Route>\r\n                        <Route path={url + addcdofferings}>\r\n                            <AddCDOffering />\r\n                        </Route>\r\n                        <Route path={url + deleteCDOffering}>\r\n                            <DeleteCDOffering />\r\n                        </Route>\r\n                        <Route path={url + transactions}>\r\n                            <TransactionsList />\r\n                        </Route>\r\n                        <Route path={url + transfer}>\r\n                            <TransferTransaction />\r\n                        </Route>\r\n                        <Route path={url + deposit}>\r\n                            <DepositTransaction />\r\n                        </Route>\r\n                        <Route path={url + withdraw}>\r\n                            <WithdrawTransaction />\r\n                        </Route>\r\n                        <Route path={url + trans}>\r\n                            <Transactions />\r\n                        </Route>\r\n                        <Route path={url + withdraw}>\r\n                            <NoMatch />\r\n                        </Route>\r\n                    </Switch>\r\n\r\n                </Jumbotron>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDash\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { CardDeck, Card, Table } from 'react-bootstrap'\r\n\r\n\r\nfunction UserProfile() {\r\n    const [store] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        displayContactInfo()\r\n    }, [])\r\n\r\n    const displayContactInfo = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": `Bearer ${jwt}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/Me\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setUser(result)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p style={{ color: 'blue', padding: '10px 0 0 50px' }}>Welcome, {user.firstName} {user.lastName}!</p>\r\n            <CardDeck className=\"wrapper\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title style={{ padding: '10px 0', borderBottom: '3px solid grey' }}>Contact</Card.Title>\r\n                        <Card.Text>Phone: <b>{user.phone}</b></Card.Text>\r\n                        <Card.Text>Email: <b>{user.email}</b></Card.Text>\r\n                        <Card.Text>Address: <b>{user.address}</b></Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title style={{ padding: '10px 0', borderBottom: '3px solid grey' }}>My Balance</Card.Title>\r\n                        <Card.Text>Total balance:<br /><code>{user.combinedBalance}</code></Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </CardDeck>\r\n            <div className=\"wrapper\">\r\n                <p style={{ color: 'blue', padding: '0 0 0 0px' }}>My Accounts</p>\r\n                <Table striped hover style={{ fontSize: '14px' }} className=\"wrapper\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Account Number</th>\r\n                            <th>Account Type</th>\r\n                            <th>Balance</th>\r\n                            <th>Interest Rate</th>\r\n                            <th>Opening Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {\r\n                            user.personalCheckingAccount != null ? user.personalCheckingAccount.map(pca =>\r\n                                <tr key={pca.accountNumber}>\r\n                                    <td>{pca.accountNumber}</td>\r\n                                    <td>Personal Checking</td>\r\n                                    <td>$ {pca.balance}</td>\r\n                                    <td>{pca.interestRate} %</td>\r\n                                    <td>{pca.openingDate}</td>\r\n                                </tr>\r\n                            )\r\n                                :\r\n                                null\r\n                        }\r\n                        {\r\n                            user.savingsAccounts != null ? user.savingsAccounts.map(pca =>\r\n                                <tr key={pca.accountNumber}>\r\n                                    <td>{pca.accountNumber}</td>\r\n                                    <td>Savings</td>\r\n                                    <td>$ {pca.balance}</td>\r\n                                    <td>{pca.interestRate} %</td>\r\n                                    <td>{pca.openingDate}</td>\r\n                                </tr>\r\n                            )\r\n                                :\r\n                                null\r\n                        }\r\n                        {\r\n                            user.dbaCheckingAccounts != null ? user.dbaCheckingAccounts.map(pca =>\r\n                                <tr key={pca.accountNumber}>\r\n                                    <td>{pca.accountNumber}</td>\r\n                                    <td>DBA Checking</td>\r\n                                    <td>$ {pca.balance}</td>\r\n                                    <td>{pca.interestRate} %</td>\r\n                                    <td>{pca.openingDate}</td>\r\n                                </tr>\r\n                            )\r\n                                :\r\n                                null\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nimport { CD_OFFERINGS } from '../../ResourceEndpoints';\r\n\r\nfunction CDOfferingList() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const [cdOfferings, setCDOfferings] = useState([])\r\n    const successMessage = store.successMessage;\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 2000)\r\n    }\r\n    useEffect(() => {\r\n        showAOfferings()\r\n    }, [])\r\n\r\n    async function showAOfferings() {\r\n        axios.get(CD_OFFERINGS, {\r\n            headers: {\r\n                'Authorization': `Bearer ` + jwt\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setCDOfferings(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(cdOfferings)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{ padding: '0 150px' }}>\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> CD Offerings</h4>\r\n            <Table style={{ backgroundColor: 'white', textAlign: 'center' }} className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Interest Rate</th>\r\n                        <th>Term</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    {\r\n                        cdOfferings.map(cdOffering =>\r\n                            <tr key={cdOffering.id}>\r\n                                <td>{cdOffering.id}</td>\r\n                                <td>{cdOffering.interestRate}</td>\r\n                                <th>{cdOffering.term}</th>\r\n                            </tr>)\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CDOfferingList\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Table, Alert } from 'react-bootstrap'\r\n\r\nfunction UserAccounts() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const [user, setUser] = useState({})\r\n    const successMessage = store.successMessage;\r\n\r\n    useEffect(() => {\r\n        displayContactInfo()\r\n    }, [])\r\n\r\n    if (successMessage !== '') {\r\n        setTimeout(() => setStore({ ...store, successMessage: '' }), 2000)\r\n    }\r\n\r\n    const displayContactInfo = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": `Bearer ${jwt}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/Me\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setUser(result)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    let counter = 1;\r\n    return (\r\n        <div>\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> My Accounts</h4>\r\n            {successMessage &&\r\n                <Alert className=\"alert\" variant='success'>{successMessage}</Alert>}\r\n            <Table striped hover style={{ fontSize: '14px' }} className=\"wrapper\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Account Type</th>\r\n                        <th>Account Number</th>\r\n                        <th>Balance</th>\r\n                        <th>Interest Rate</th>\r\n                        <th>Opening Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    {\r\n                        user.personalCheckingAccount != null ? user.personalCheckingAccount.map(pca =>\r\n                            <tr key={pca.accountNumber}>\r\n                                <td>{counter++}</td>\r\n                                <td>Personal Checking</td>\r\n                                <td>{pca.accountNumber}</td>\r\n                                <td>$ {pca.balance}</td>\r\n                                <td>{pca.interestRate} %</td>\r\n                                <td>{pca.openingDate}</td>\r\n                            </tr>\r\n                        )\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        user.savingsAccounts != null ? user.savingsAccounts.map(pca =>\r\n                            <tr key={pca.accountNumber}>\r\n                                <td>{counter++}</td>\r\n                                <td>Savings</td>\r\n                                <td>{pca.accountNumber}</td>\r\n                                <td>$ {pca.balance}</td>\r\n                                <td>{pca.interestRate} %</td>\r\n                                <td>{pca.openingDate}</td>\r\n                            </tr>\r\n                        )\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        user.cdAccounts != null ? user.cdAccounts.map(cda =>\r\n                            <tr key={cda.accountNumber}>\r\n                                <td>{counter++}</td>\r\n                                <td>Certificate of Deposit</td>\r\n                                <td>{cda.accountNumber}</td>\r\n                                <td>$ {cda.balance}</td>\r\n                                <td>{cda.interestRate} %</td>\r\n                                <td>{cda.openingDate}</td>\r\n                            </tr>\r\n                        )\r\n                            :\r\n                            null\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAccounts\r\n","import React, { useState, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nfunction OpenPersonalChecking() {\r\n    const [balance, setBalance] = useState('')\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        openAccount();\r\n    }\r\n\r\n\r\n    const openAccount = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"balance\": 15000\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/Me/personal-checking-account\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: \"Account Opened Successfully!\" })\r\n                history.push('/user')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Open Personal Account</h4>\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}>Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value={balance}\r\n                                onChange={e => setBalance(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                            {/* <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button> */}\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenPersonalChecking\r\n","import React, { useState, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nfunction OpenSavingsAccount() {\r\n    const [balance, setBalance] = useState('')\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        openAccount();\r\n    }\r\n\r\n\r\n    const openAccount = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"balance\": balance\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/Me/savingsaccounts\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: \"Account Opened Successfully!\" })\r\n                history.push('/user')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Savings Account</h4>\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}>Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value={balance}\r\n                                onChange={e => setBalance(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                            {/* <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button> */}\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenSavingsAccount\r\n","import React, { useState, useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nfunction OpenCDAccount() {\r\n    const [balance, setBalance] = useState('')\r\n    const [cdOffering, setCDOffering] = useState('')\r\n\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        openAccount();\r\n    }\r\n\r\n\r\n    const openAccount = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"balance\": balance,\r\n            \"cdOffering\": {\r\n                \"id\": 1\r\n            }\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/Me/cdaccounts\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setStore({ ...store, successMessage: \"Account Opened Successfully!\" })\r\n                history.push('/user')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <h4 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> CD Account</h4>\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}>Amount</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"CD Offering\"\r\n                                value={balance}\r\n                                onChange={e => setBalance(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}>CD Offering</Form.Label>\r\n                        <Col sm={3}>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Amount\"\r\n                                value={cdOffering}\r\n                                onChange={e => setCDOffering(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                            {/* <Button variant=\"warning\" onClick={() => history.push('/admin/accounts')} style={{ marginLeft: '20px' }}>Cancel</Button> */}\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenCDAccount\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { Jumbotron } from 'react-bootstrap'\r\n\r\nimport UserAccounts from './UserAccounts';\r\nimport OpenPersonalChecking from './OpenPersonalChecking';\r\nimport OpenSavingsAccount from './OpenSavingsAccount';\r\nimport OpenCDAccount from './OpenCDAccount';\r\n\r\nconst personalChecking = '/personal-checking'\r\nconst savings = '/savings'\r\nconst cdAccount = '/cd-account'\r\n\r\nfunction Accounts() {\r\n    const { url } = useRouteMatch();\r\n    return (\r\n        <React.Fragment className=\"container\">\r\n            <Router>\r\n                <Jumbotron className=\"menu1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 add-account-dash\">\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url}>Accounts List <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + savings}>Savings Account  <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + personalChecking}>Personal Checking <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + personalChecking}>DBA Checking <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url + cdAccount}>CD Account <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url}>Regular IRA <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url}>Roth IRA <i class=\"fas fa-chevron-right\"></i></Link>\r\n                            <Link style={{ fontSize: '16px' }} className=\"add-account-link\" to={url}>Rollover IRA <i class=\"fas fa-chevron-right\"></i></Link>\r\n                        </div>\r\n                        <div className=\" add-account-container\">\r\n                            <Switch>\r\n                                <Route exact path={url}>\r\n                                    <UserAccounts />\r\n                                </Route>\r\n                                <Route exact path={url + savings}>\r\n                                    <OpenSavingsAccount />\r\n                                </Route>\r\n                                <Route exact path={url + personalChecking}>\r\n                                    <OpenPersonalChecking />\r\n                                </Route>\r\n                                <Route exact path={url + cdAccount}>\r\n                                    <OpenCDAccount />\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Accounts\r\n","import { AuthorizationContext } from '../../AuthorizationContext'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nfunction UserTransfer() {\r\n    const [store, setStore] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const jwt = store.jwt\r\n    const history = useHistory();\r\n    const [sourceAccount, setSourceAccount] = useState('')\r\n    const [targetAccount, setTargetAccount] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [amount, setAmmount] = useState('')\r\n    const [user, setUser] = useState({})\r\n    const successMessage = store.successMessage;\r\n\r\n    useEffect(() => {\r\n        displayContactInfo()\r\n        console.log('sucess message: ', successMessage)\r\n    }, [])\r\n\r\n    const displayContactInfo = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": `Bearer ${jwt}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/Me\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log('from user transfer: ', result)\r\n                setUser(result)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        submitTransfer();\r\n    }\r\n\r\n    const submitTransfer = () => {\r\n        const myHeaders = {\r\n            \"Authorization\": \"Bearer \" + jwt,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        const payload = JSON.stringify({\r\n            \"sourceAccountNum\": sourceAccount,\r\n            \"targetAccountNum\": targetAccount,\r\n            \"description\": description,\r\n            \"amount\": amount\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: payload,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/api/transfer\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                setStore({ ...store, successMessage: 'Transfer successfull!' })\r\n                history.push('/user/checkingAcc')\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"transfer-header\"><i class=\"fas fa-chevron-circle-right\"></i> Transfer</h3>\r\n            <Form onSubmit={handleSubmit} className=\"wrapper\">\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm={2}>Source Account</Form.Label>\r\n                    <select className=\"form-select\" onChange={e => setSourceAccount(e.target.value)}>\r\n                        <option >Select</option>\r\n                        <option >{user.personalCheckingAccount != null ? user.personalCheckingAccount[0].accountNumber : null}</option>\r\n                        <option >{user.savingsAccounts != null ? user.savingsAccounts[0].accountNumber : null}</option>\r\n                        {user.cdAccounts != null ? user.cdAccounts.map((cd => <option>{cd.accountNumber}</option>)) : null}\r\n\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Target Account</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Target Account\"\r\n                            value={targetAccount}\r\n                            onChange={e => setTargetAccount(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Description</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Description\"\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>Amount</Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={amount}\r\n                            onChange={e => setAmmount(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button variant=\"dark\" type=\"submit\">Submit</Button>\r\n                        <Button variant=\"warning\" onClick={() => history.push('/admin')} style={{ marginLeft: '20px' }}>Cancel</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserTransfer\r\n","import React, { useContext } from 'react'\r\nimport { AuthorizationContext } from '../../AuthorizationContext'\r\nimport { Form, FormControl, Button, Jumbotron, Navbar } from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\n//Components\r\nimport UserProfile from './UserProfile'\r\nimport UserCDOffering from './UserCDOffering'\r\nimport Logout from '../shared/Logout';\r\nimport Accounts from './Accounts';\r\nimport UserTransfer from './UserTransfer';\r\n\r\n//Component URLs\r\nconst cdOfferings = '/cd-offerings'\r\nconst openChecking = '/checkingAcc'\r\nconst transfer = '/transfer'\r\n\r\nfunction UserDash() {\r\n    const [store] = useContext(AuthorizationContext)\r\n    const isLoggedIn = store.isLoggedIn;\r\n    const role = store.role;\r\n    const { url } = useRouteMatch();\r\n    const { logout } = Logout();\r\n\r\n    if (!isLoggedIn && role !== \"[ROLE_ADMIN]\") {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Router>\r\n                <Navbar bg=\"\" variant=\"\" className=\"admin-top-header\">\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        {\r\n                            isLoggedIn\r\n                                ?\r\n                                <code onClick={logout} className=\"logout-btn\">\r\n                                    Logout\r\n                                </code>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Navbar bg=\"\" variant=\"\" className=\"admin-header\">\r\n                    <img src=\"/images/logo.jpeg\" height=\"35\" alt=\"logo\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"How can we help you?\"\r\n                                className=\"mr-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button variant=\"warning\"><i class=\"fas fa-search\"></i></Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Navbar bg=\"\" variant=\"\" className=\"menu\">\r\n                    <Link className=\"dash-menu\" active to={url}>Home</Link>\r\n                    <Link className=\"dash-menu\" active to={url + openChecking}>Accounts</Link>\r\n                    <Link className=\"dash-menu\" active to={url + transfer}>Send Money</Link>\r\n                    <Link className=\"dash-menu\" active to={url + cdOfferings}>CD Offerings</Link>\r\n                </Navbar>\r\n                <Jumbotron className=\"menu1\">\r\n                    <h3 className=\"component-header\">Dashboard</h3>\r\n                    <Switch>\r\n                        <Route exact path={url}>\r\n                            <UserProfile />\r\n                        </Route>\r\n                        <Route exact path={url + openChecking}>\r\n                            <Accounts />\r\n                        </Route>\r\n                        <Route path={url + cdOfferings}>\r\n                            <UserCDOffering />\r\n                        </Route>\r\n                        <Route path={url + transfer}>\r\n                            <UserTransfer />\r\n                        </Route>\r\n                    </Switch>\r\n                </Jumbotron>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDash\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { AuthorizationProvider } from './AuthorizationContext'\r\n\r\nimport Landing from './components/landing_page/Landing'\r\nimport Login from './components/login/Login'\r\nimport AdminDashboard from './components/admin_dashboard/AdminDash'\r\nimport UserDashboard from './components/user_dashboard/UserDash'\r\nimport NoMatch from './components/shared/NoMatch';\r\n\r\nfunction App() {\r\n    return (\r\n        <AuthorizationProvider>\r\n            <Router >\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Landing />\r\n                    </Route>\r\n                    <Route exact path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route exact path=\"/admin\">\r\n                        <AdminDashboard />\r\n                    </Route>\r\n                    <Route exact path=\"/user\">\r\n                        <UserDashboard />\r\n                    </Route>\r\n                    <Route exact path=\"*\">\r\n                        <NoMatch />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </AuthorizationProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}